
metaflux: html`

Group art show<br>
09/22/18 - 11/17/18
<br><br>With:

<p><a href="https://nicolation.net">Nicole Aptekar</a><br>
<a href="http://onecm.com">Ryan Alexander</a><br>
<a href="http://harvey-moon.com">Harvey Moon</a><br>
<a href="http://gabrieldunne.com">Gabriel Dunne</a><br>
</p>
<br><br>
About the show:

meta (a) pertaining to or noting an abstract, high-level analysis or commentary, especially one that consciously references something of its own type.

flux (n) continuous change, passage, or movement

Framing understanding through routines and systems, Metaflux is a body of procedure-oriented artworks based on system-focused approaches and integrations. The processes examined by the artists featured in Metaflux are intrinsic to navigating shifts and changes by establishing routines and frameworks. The artifacts of these personal frameworks, as well as the frameworks themselves, represent the efforts to create reliable variables and constructs in a life defined by constant transition and flux.
<br>
<br>

<p><img src="./photosphere.jpg"></p>
<p><img src="./output.gif"></p>
<p><img src="./1.jpg"></p>
<p><img src="./2.jpg"></p>
<p><img src="./3.jpg"></p>
<p><img src="./4.jpg"></p>
`,
video: html`

<style>
.iframes{
  max-width: 900px;
}
iframe {
  height: 500px;
  margin:60px auto 0px auto;
}
</style>

Various videos made over the years

<div class="iframes">
<iframe width="100%" src="https://www.youtube.com/embed/z7vsPmbeN_s" frameborder="0" allowfullscreen></iframe>
<iframe width="100%" src="https://www.youtube.com/embed/tc0yMRtPbEQ" frameborder="0" allowfullscreen></iframe>
<iframe width="100%" src="https://www.youtube.com/embed/fca2zeBcpMI" frameborder="0" allowfullscreen></iframe>
<iframe width="100%" src="https://www.youtube.com/embed/SNlX4YqY02Q" frameborder="0" allowfullscreen></iframe>
</div>
`,
reclaimed: html`

Scrambling music with code

<iframe width="100%" height="500" scrolling="no" frameborder="no" src="https://w.soundcloud.com/player/?url=https%3A//api.soundcloud.com/playlists/242000489&amp;color=%23ff5500&amp;auto_play=false&amp;hide_related=false&amp;show_comments=true&amp;show_user=true&amp;show_reposts=false"></iframe>
<br>
<br>
<br>
<!-- <h4> A little bit about the project:</h4> -->
<p> 
This project uses the <a href="https://github.com/algorithmic-music-exploration/amen">Amen library</a> to rip apart songs and piece them back together again using a two-tiered <a href="https://en.wikipedia.org/wiki/L-system">Lindenmayer system</a> for composition: one for beats, another for song structure. 
</p>

<!--
<p>
  An interesting line of exploration developed in my solo music a few years ago. I found myself in Ableton Live slicing up other artists' songs into slivers of sound &mdash; often only long enough to get a single drum hit &mdash; and then rearranging them to form beats and musical phrases. Here's a short example:
</p>

<iframe width="100%" height="20" scrolling="no" frameborder="no" allow="autoplay" src="https://w.soundcloud.com/player/?url=https%3A//api.soundcloud.com/tracks/37168086&color=%23ff5500&inverse=false&auto_play=false&show_user=true">
</iframe>
<p>
  The main ingredient in that example is: Peter John and Bjorn's Let's Call It Off<br><br>
  <iframe width="100%" height="20" scrolling="no" frameborder="no" allow="autoplay" src="https://w.soundcloud.com/player/?url=https%3A//api.soundcloud.com/tracks/123022952&color=%23ff5500&inverse=false&auto_play=false&show_user=true"></iframe>
  </p>
<p>
  My intent was to sample just the (impecible) drum hits from this song. But, without access to the original, isolated drum recording, any attempt to extract them left me with other bits of song: vocals, guitars, bass. ("try to pull a noodle from the spaghetti and you're gonna get some sauce"). A frustration at first. But, after piecing together a beat, I came to realize that the sauce made things more interesting.
</p>
<p>
  After using this technique a few times in songs, and enjoying the results, I figured this was the sort of thing that would be better done with the aid of code. I found the <a href="https://github.com/algorithmic-music-exploration/amen">Amen library</a>, which does a great job
  of doing the slicing. It quickly finds "hits" in the song, and gives you a nice set of code tools for remixing.
</p> -->
`,
talka: html`

<a href="https://itunes.apple.com/us/app/talka/id1046174058?mt=8">Talka</a> turns your iPhone into a singer&mdash;or robot beatboxer&mdash;capable of vocal acrobatics that would make Meredith Monk melt. And, with Talka, you conduct eight of them! Spin wondrous little word loops. Slide their pitch. Vary their speed. Switch their language to use different voices and pronunciations. Let Talka talk and sing you into a more musical future.

<!-- Talka was made over two weeks in October 2015 as a final project for the <a href="http://codepath.com/">Codepath</a> iOS for Designers class, where it won the award for Best iOS App. -->

<div style="position: relative; width: 100%; height: 0; padding-bottom: 56.25%;">

<iframe style="position: absolute; top: 0; left: 0; width: 100%; height: 100%;" src="https://www.youtube.com/embed/lWMDW_RzU90" frameborder="0" allowfullscreen></iframe>
</div>
<br/>
<div style="position: relative; width: 100%; height: 0; padding-bottom: 56.25%;">
<iframe style="position: absolute; top: 0; left: 0; width: 100%; height: 100%;" src="https://www.youtube.com/embed/lhJFkRuibjg" frameborder="0" allowfullscreen></iframe>
</div>
<!-- <iframe width="560" height="315" src="https://www.youtube.com/embed/lWMDW_RzU90" frameborder="0" allow="autoplay; encrypted-media" allowfullscreen></iframe> -->
<!-- <iframe width="560" height="315" src="https://www.youtube.com/embed/lhJFkRuibjg" frameborder="0" allow="autoplay; encrypted-media" allowfullscreen></iframe> -->
<!-- <iframe width="560" height="315" src="https://www.youtube.com/embed/lWMDW_RzU90" frameborder="0" allow="autoplay; encrypted-media" allowfullscreen></iframe> -->
`,
jacmb: html`

Selected solo music 2011 - 2018.

<iframe width="100%" height="500" scrolling="yes" frameborder="no" src="https://w.soundcloud.com/player/?url=https%3A//api.soundcloud.com/playlists/357480211&color=%23ff5500&auto_play=false&hide_related=true&show_comments=true&show_user=true&show_reposts=false&show_teaser=false&visual=false"></iframe>
`,
pendrillum: html`

<p>
  Pendrillum is a homemade art improvement machine.
</p>
<p>
  Q: What does it look like to take a drill outside of the accepted spectrum of use, and even beyond what are considered
  to be <a href="https://www.youtube.com/watch?v=6och7-0iI00">unusual hacks</a>?

</p>
<p>
  A: A fish out of water
</p>

<p><img src="drillpaint.gif"></p>
`,
tens: html`

<style>
.iframes{
  max-width: 900px;
}
iframe {
  height: 500px;
  margin:60px auto 0px auto;
}
</style>

<div style="position: relative; width: 100%; height: 0; padding-bottom: 56.25%;">

<iframe style="position: absolute; top: 0; left: 0; width: 100%; height: 100%;" src="https://www.youtube.com/embed/whjlLivmA0E" frameborder="0" allowfullscreen></iframe>
</div>
`,
pixel: html`

Fun little app I made in 2010 for drawing repeating pixelated designs.

<img src="./screenshot.png" width="100%" style="max-width: 100% !important">
<a style="background: cerillian; display:block;width:100%; text-align:center;font-size:40px; font-weight:bold;" href="http://mjacobs.me/patternmaker/">Try it out!</a>
`,
graphix: html`

<img style="width:100%;" src="http://mjacobs.me/__archive/circles/1.png"><img style="width:100%;" src="http://mjacobs.me/__archive/circles/1b.png"><img style="width:100%;" src="http://mjacobs.me/__archive/circles/2.png"><img style="width:100%;" src="http://mjacobs.me/__archive/circles/2b.png"><img style="width:100%;" src="http://mjacobs.me/__archive/circles/3.png"><img style="width:100%;" src="http://mjacobs.me/__archive/circles/3b.png"><img style="width:100%;" src="http://mjacobs.me/__archive/circles/4.png"><img style="width:100%;" src="http://mjacobs.me/__archive/circles/4b.png"><img style="width:100%;" src="http://mjacobs.me/__archive/circles/5.png"><img style="width:100%;" src="http://mjacobs.me/__archive/circles/5b.png"><img style="width:100%;" src="http://mjacobs.me/__archive/circles/6.png"><img style="width:100%;" src="http://mjacobs.me/__archive/circles/6b.png"><img style="width:100%;" src="http://mjacobs.me/__archive/circles/7.png"><img style="width:100%;" src="http://mjacobs.me/__archive/circles/7b.png"><img style="width:100%;" src="http://mjacobs.me/__archive/circles/8.png"><img style="width:100%;" src="http://mjacobs.me/__archive/circles/8b.png"><img style="width:100%;" src="http://mjacobs.me/__archive/circles/9.png"><img style="width:100%;" src="http://mjacobs.me/__archive/circles/9b.png"><img style="width:100%;" src="http://mjacobs.me/__archive/circles/10.png"><img style="width:100%;" src="http://mjacobs.me/__archive/circles/10b.png"><img style="width:100%;" src="http://mjacobs.me/__archive/circles/11.png"><img style="width:100%;" src="http://mjacobs.me/__archive/circles/11b.png"><img style="width:100%;" src="http://mjacobs.me/__archive/circles/12.png"><img style="width:100%;" src="http://mjacobs.me/__archive/circles/12b.png"><img style="width:100%;" src="http://mjacobs.me/__archive/circles/13.png"><img style="width:100%;" src="http://mjacobs.me/__archive/circles/13b.png"><img style="width:100%;" src="http://mjacobs.me/__archive/circles/14.png"><img style="width:100%;" src="http://mjacobs.me/__archive/circles/14b.png"><img style="width:100%;" src="http://mjacobs.me/__archive/circles/15.png"><img style="width:100%;" src="http://mjacobs.me/__archive/circles/15b.png">

<script>
var numCircles = 15
var count = 0
  var output = ""
  console.log(output)
while(count++ < numCircles){
output += "<img src='http://mjacobs.me/circles/" + count + ".png'>"
    output += "<img src='http://mjacobs.me/circles/" + count + "b.png'>"
    console.log(output)
}
document.write(output)
</script>
`,
fleas: html`

Another fun (and anxiety-inducing) little game I made in 2010 after a roommate's cat came home with fleas.

<img src="./fleas2.png" width="100%" style="max-width: 100% !important">
<a style="background: cerillian; display:block;width:100%; text-align:center;font-size:40px; font-weight:bold;" href="http://mjacobs.me/fleas/">Try it out!</a>
`,
brandoSkirts: html`

<iframe style="border: 0; width: 100%; max-width:100% !important; height: 472px;" src="https://bandcamp.com/EmbeddedPlayer/album=4038781229/size=large/bgcol=ffffff/linkcol=0687f5/artwork=small/transparent=true/" seamless><a href="http://brandoskirts.bandcamp.com/album/buffalo-buffalo-buffalo">Buffalo Buffalo Buffalo by Brando Skirts</a></iframe>

Released May 20, 2006

Mike Jacobs: production, drums, percussion, trumpet, keyboards, programming, vocals, washing machine, field recording, ipod malfunction, bass guitar.

Carter Maness: vocals, poetics, guitar, noise, theory, ukulele, bass guitar, saxophone, wurlitzer.

Joel Arthur plays bass on "Grim Dissection of Perpetual Dissatisfaction" and "Snot Incubator"

Luke Iannini and Kim Lance sing on "Awkward Wedding Night"
`,
vectorray: html`

Recursive Drawing App

<p><img src="vectorray_1.jpg"></p>
<p><img src="vectorray_10.jpg"></p>
<p><img src="vectorray_11.jpg"></p>
<p><img src="vectorray_12.jpg"></p>
<p><img src="vectorray_13.jpg"></p>
<p><img src="vectorray_14.jpg"></p>
<p><img src="vectorray_15.jpg"></p>
<p><img src="vectorray_16.jpg"></p>
<p><img src="vectorray_17.jpg"></p>
<p><img src="vectorray_18.jpg"></p>
<p><img src="vectorray_19.jpg"></p>
<p><img src="vectorray_2.jpg"></p>
<p><img src="vectorray_3.jpg"></p>
<p><img src="vectorray_4.jpg"></p>
<p><img src="vectorray_5.jpg"></p>
<p><img src="vectorray_6.jpg"></p>
<p><img src="vectorray_7.jpg"></p>
<p><img src="vectorray_8.jpg"></p>
`,
aristid: html`

Scrambling music with code

<iframe width="100%" height="500" scrolling="no" frameborder="no" src="https://w.soundcloud.com/player/?url=https%3A//api.soundcloud.com/playlists/242000489&amp;color=%23ff5500&amp;auto_play=false&amp;hide_related=false&amp;show_comments=true&amp;show_user=true&amp;show_reposts=false"></iframe>
<br>
<br>
<br>
<!-- <h4> A little bit about the project:</h4> -->
<p> 
This project uses the <a href="https://github.com/algorithmic-music-exploration/amen">Amen library</a> to rip apart songs and piece them back together again using a two-tiered <a href="https://en.wikipedia.org/wiki/L-system">Lindenmayer system</a> for composition: one for beats, another for song structure. 
</p>

<!--
<p>
  An interesting line of exploration developed in my solo music a few years ago. I found myself in Ableton Live slicing up other artists' songs into slivers of sound &mdash; often only long enough to get a single drum hit &mdash; and then rearranging them to form beats and musical phrases. Here's a short example:
</p>

<iframe width="100%" height="20" scrolling="no" frameborder="no" allow="autoplay" src="https://w.soundcloud.com/player/?url=https%3A//api.soundcloud.com/tracks/37168086&color=%23ff5500&inverse=false&auto_play=false&show_user=true">
</iframe>
<p>
  The main ingredient in that example is: Peter John and Bjorn's Let's Call It Off<br><br>
  <iframe width="100%" height="20" scrolling="no" frameborder="no" allow="autoplay" src="https://w.soundcloud.com/player/?url=https%3A//api.soundcloud.com/tracks/123022952&color=%23ff5500&inverse=false&auto_play=false&show_user=true"></iframe>
  </p>
<p>
  My intent was to sample just the (impecible) drum hits from this song. But, without access to the original, isolated drum recording, any attempt to extract them left me with other bits of song: vocals, guitars, bass. ("try to pull a noodle from the spaghetti and you're gonna get some sauce"). A frustration at first. But, after piecing together a beat, I came to realize that the sauce made things more interesting.
</p>
<p>
  After using this technique a few times in songs, and enjoying the results, I figured this was the sort of thing that would be better done with the aid of code. I found the <a href="https://github.com/algorithmic-music-exploration/amen">Amen library</a>, which does a great job
  of doing the slicing. It quickly finds "hits" in the song, and gives you a nice set of code tools for remixing.
</p> -->
`,
hyperlasso: html`

Scrambling music with code

<iframe width="100%" height="500" scrolling="no" frameborder="no" src="https://w.soundcloud.com/player/?url=https%3A//api.soundcloud.com/playlists/242000489&amp;color=%23ff5500&amp;auto_play=false&amp;hide_related=false&amp;show_comments=true&amp;show_user=true&amp;show_reposts=false"></iframe>
<br>
<br>
<br>
<!-- <h4> A little bit about the project:</h4> -->
<p> 
This project uses the <a href="https://github.com/algorithmic-music-exploration/amen">Amen library</a> to rip apart songs and piece them back together again using a two-tiered <a href="https://en.wikipedia.org/wiki/L-system">Lindenmayer system</a> for composition: one for beats, another for song structure. 
</p>

<!--
<p>
  An interesting line of exploration developed in my solo music a few years ago. I found myself in Ableton Live slicing up other artists' songs into slivers of sound &mdash; often only long enough to get a single drum hit &mdash; and then rearranging them to form beats and musical phrases. Here's a short example:
</p>

<iframe width="100%" height="20" scrolling="no" frameborder="no" allow="autoplay" src="https://w.soundcloud.com/player/?url=https%3A//api.soundcloud.com/tracks/37168086&color=%23ff5500&inverse=false&auto_play=false&show_user=true">
</iframe>
<p>
  The main ingredient in that example is: Peter John and Bjorn's Let's Call It Off<br><br>
  <iframe width="100%" height="20" scrolling="no" frameborder="no" allow="autoplay" src="https://w.soundcloud.com/player/?url=https%3A//api.soundcloud.com/tracks/123022952&color=%23ff5500&inverse=false&auto_play=false&show_user=true"></iframe>
  </p>
<p>
  My intent was to sample just the (impecible) drum hits from this song. But, without access to the original, isolated drum recording, any attempt to extract them left me with other bits of song: vocals, guitars, bass. ("try to pull a noodle from the spaghetti and you're gonna get some sauce"). A frustration at first. But, after piecing together a beat, I came to realize that the sauce made things more interesting.
</p>
<p>
  After using this technique a few times in songs, and enjoying the results, I figured this was the sort of thing that would be better done with the aid of code. I found the <a href="https://github.com/algorithmic-music-exploration/amen">Amen library</a>, which does a great job
  of doing the slicing. It quickly finds "hits" in the song, and gives you a nice set of code tools for remixing.
</p> -->
`,
monsterPlotter: html`

<p>
  Large format plotter built mostly from big box store parts. 
</p>
<p>
Documentation coming soon. For now:
<ul>
<li><a href="https://www.instagram.com/p/B_yHMaBBIrq/">Instagram post 4</a></li>
<li><a href="https://www.instagram.com/p/B_ukwqsBscZ/">Instagram post 3</a></li>
<li><a href="https://www.instagram.com/p/B_ujdGsBgf3/">Instagram post 2</a></li>
<li><a href="https://www.instagram.com/p/B--v_v9huLz/">Instagram post 1</a></li>

</p>

<!-- <p><img src="./side.mp4"></p>
<p><img src="./0.jpg"></p>
<p><img src="./straight.mp4"></p>
<p><img src="./1.jpg"></p>
<p><img src="./top_down.mp4"></p> -->
`,
plotter: html`

<br>
<br>

<p>In June 2017, in an attempt to break an over reliance on the computer, I acquired a small plotter and spent the next two months experimenting. I gave it pens, markers, paints, and screw drivers which I then used to etch designs into wet paint. After a little while, I found myself wanting to make larger pieces, so I built a pantograph to multiply the reach of the device 2-3x. Here is my documentation of that line of experiments in reverse chronological order. </p>
<br>
<br>
<br>

<p><img src="plotter.jpg"></p>
<p><img src="solder.jpg"></p>
<p><img src="wave.jpg"></p>
<p><img src="hots.jpg"></p>
<p><img src="hi.jpg"></p>
<p><img src="cloth.jpg"></p>
<p><img src="fingermachine.gif"></p>
<p><img src="helpmachine.gif"></p>
<p><img src="38.jpg"></p>
<p><img src="37.jpg"></p>
<p><img src="36.jpg"></p>
<p><img src="35.jpg"></p>
<p><img src="34.jpg"></p>
<p><img src="33.jpg"></p>
<p><img src="32.jpg"></p>
<p><img src="31.jpg"></p>
<p><img src="30.jpg"></p>
<p><img src="29.jpg"></p>
<p><img src="28.jpg"></p>
<p><img src="27.jpg"></p>
<p><img src="26.jpg"></p>
<p><img src="25.jpg"></p>
<p><img src="24.jpg"></p>
<p><img src="23.jpg"></p>
<p><img src="22.jpg"></p>
<p><img src="21.jpg"></p>
<p><img src="20.jpg"></p>
<p><img src="19.jpg"></p>
<p><img src="18.jpg"></p>
<p><img src="17.jpg"></p>
<p><img src="16.jpg"></p>
<p><img src="15.jpg"></p>
<p><img src="14.jpg"></p>
<p><img src="13.jpg"></p>
<p><img src="12.jpg"></p>
<p><img src="11.jpg"></p>
<p><img src="10.jpg"></p>
<p><img src="9.jpg"></p>
<p><img src="8.jpg"></p>
<p><img src="7.jpg"></p>
<p><img src="6.jpg"></p>
<p><img src="5.jpg"></p>
<p><img src="4.jpg"></p>
<p><img src="3.jpg"></p>
<p><img src="2.jpg"></p>
<p><img src="1.jpg"></p>
<script>
var num = 0;
var count = 39;
while(count-- >= num){
  let i = document.createElement("img") 
  i.src = "" + count + ".jpg"
  console.log(i)
}
</script>

<!-- document.querySelectorAll(".KL4Bh img").forEach((e,i)=> {
document.write("<a href='"+e.src+"' download='"+i+".jpg'><img src='"+e.src+"'></a>")
}) -->
`,
microscope: html`

<style>
.iframes{
  max-width: 900px;
}
iframe {
  height: 500px;
  margin:60px auto 0px auto;
}
</style>

The Microscope Taught Me There's An Infinite Universe In Both Directions

Performed live by Michael Jacobs (music) and Alexandra Hay (visuals, microscope) at the Luggage Store in San Francisco on April 9th, 2015.

<div class="iframes">
<iframe width="100%" src="https://www.youtube.com/embed/p3eFCb--2iE" frameborder="0" allowfullscreen></iframe>
</div>
`,
